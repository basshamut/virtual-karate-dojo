name: Node.js CD

# Controls when the action will run.
on:
  push:
    branches: [ main ]

# A workflow run is made up of one or more jobs that can run sequentially o en paralelo
jobs:
  build:
    # El tipo de runner que el trabajo usará
    runs-on: ubuntu-latest

    # Variables de entorno
    env:
      SSH_HOST: srv503843.hstgr.cloud
      SSH_USERNAME: root
      SSH_PASSWORD: sep11Jes.170211

    # Los pasos representan una secuencia de tareas que se ejecutarán como parte del trabajo
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '14'  # O la versión que uses

      - name: Install dependencies for frontend
        run: |
          cd frontend
          npm install

      - name: Build frontend
        run: |
          cd frontend
          npm run build

      - name: Install dependencies for backend
        run: |
          cd backend
          npm install

      - name: Deploy using ssh
        env:
          SSH_HOST: ${{ env.SSH_HOST }}
          SSH_USERNAME: ${{ env.SSH_USERNAME }}
          SSH_PASSWORD: ${{ env.SSH_PASSWORD }}
        run: |
          # Crear directorios en el VPS
          sshpass -p $SSH_PASSWORD ssh -o StrictHostKeyChecking=no $SSH_USERNAME@$SSH_HOST "mkdir -p /var/www/html/virtual-dojo/frontend /var/www/html/virtual-dojo/backend"

          # Copiar el build del frontend al VPS
          sshpass -p $SSH_PASSWORD rsync -avz --delete -e "ssh -o StrictHostKeyChecking=no" ./frontend/dist/ $SSH_USERNAME@$SSH_HOST:/var/www/html/virtual-dojo/frontend

          # Copiar el backend al VPS
          sshpass -p $SSH_PASSWORD rsync -avz --delete -e "ssh -o StrictHostKeyChecking=no" ./backend/ $SSH_USERNAME@$SSH_HOST:/var/www/html/virtual-dojo/backend

          # Conectar al VPS y reiniciar el backend
          sshpass -p $SSH_PASSWORD ssh -o StrictHostKeyChecking=no $SSH_USERNAME@$SSH_HOST << 'EOF'
          cd /var/www/html/virtual-dojo/backend
          npm install --only=prod
          pm2 restart all || pm2 start server.js --name virtual-dojo
          exit
          EOF
