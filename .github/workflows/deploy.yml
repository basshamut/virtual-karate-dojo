name: Node.js CD

# Controls when the action will run.
on:
  push:
    branches: [ main ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    env:
      SSH_HOST: srv503843.hstgr.cloud
      SSH_USERNAME: root
      SSH_PASSWORD: sep11Jes.170211

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '14'  # O la versi√≥n que uses

      - name: Install dependencies for frontend
        run: |
          cd frontend
          npm install

      - name: Build frontend
        run: |
          cd frontend
          npm run build

      - name: Install dependencies for backend
        run: |
          cd backend
          npm install

      - name: Deploy using ssh
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ env.SSH_HOST }}
          username: ${{ env.SSH_USERNAME }}
          password: ${{ env.SSH_PASSWORD }}
          port: 22
          script: |
            # Crear directorios en el VPS
            mkdir -p /var/www/html/virtual-dojo/frontend
            mkdir -p /var/www/html/virtual-dojo/backend

            # Copiar el build del frontend al VPS
            rsync -avz --delete ./frontend/dist/ $SSH_USERNAME@$SSH_HOST:/var/www/html/virtual-dojo/frontend

            # Copiar el backend al VPS
            rsync -avz --delete ./backend/ $SSH_USERNAME@$SSH_HOST:/var/www/html/virtual-dojo/backend

            # Conectar al VPS y reiniciar el backend
            ssh $SSH_USERNAME@$SSH_HOST << 'EOF'
            cd /var/www/html/virtual-dojo/backend
            npm install --only=prod
            pm2 restart all || pm2 start server.js --name virtual-dojo
            exit
            EOF
